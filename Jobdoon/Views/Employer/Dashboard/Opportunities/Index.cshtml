@inject Microsoft.AspNetCore.Identity.UserManager<Jobdoon.Models.Entities.AppUser> userManager
@inject Jobdoon.DataAccess.UnitOfWork.IUnitOfWork unit
@using Jobdoon.Utilities;
@{
    var user = userManager.GetUserAsync(User).Result;
    var opportunities = unit.Opportunities.Find(o => o.CompanyId == user.CompanyId).ToList();
}
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" href="#">همه آگهی ها</a>
                </li>
                <li class="nav-item">
                    <a asp-controller="Employer" asp-action="ActiveOpportunities" class="nav-link">آگهی های فعال</a>
                </li>
                <li class="nav-item">
                    <a asp-controller="Employer" asp-action="ClosedOpportunities" class="nav-link">آگهی های بسته شده</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container mt-5">
    <div class="row">
        @foreach (var o in opportunities)
        {
            var province = unit.Provinces.Find(p => o.ProvinceId == p.Id).First();
            var assignment = unit.Assignments.Find(p => o.AssignmentId == p.Id).First();
            var minSalary = unit.MinimumSalaries.Find(p => o.MinimumSalaryId == p.Id).First();
            <div class="card mb-3 me-3" style="max-width: 420px;">
                <div class="row g-0">
                    <div class="card-body">
                        <h5 class="card-title">@o.Title</h5>
                        <p class="card-text">@province.Name</p>
                        <p class="card-text">@assignment.Title</p>
                        <p class="card-text">
                            @((minSalary.Title) == null?
                            $"از " + $"{StringUtilities.Divide3DigitsByComma(minSalary.Amount.Value)} تومان"
                            : minSalary.Title)
                        </p>
                        <form method="post" class="m-0 p-0">
                            <button asp-controller="Employer" asp-action="CloseOpportunity"
                                    asp-route-opportunityId="@o.Id" class="btn btn-secondary">
                                بستن
                            </button>
                            <button asp-controller="Employer" asp-action="EditOpportunity"
                                    asp-route-opportunityId="@o.Id" class="btn btn-secondary">
                                ویرایش
                            </button>
                            <button asp-controller="Employer" asp-action="RemoveOpportunity"
                                    asp-route-opportunityId="@o.Id" class="btn btn-danger">
                                حذف
                            </button>
                        </form>
                        <br />
                        <p class="card-text float-end">
                            <small class="text-muted">منتشر شده در @Jobdoon.Utilities.PersianCalendarUtilities.YearMonthDate(o.Date)</small>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>