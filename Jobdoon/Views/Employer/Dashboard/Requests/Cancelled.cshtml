@inject Microsoft.AspNetCore.Identity.UserManager<Jobdoon.Models.Entities.AppUser> userManager
@inject Jobdoon.DataAccess.UnitOfWork.IUnitOfWork unit
@using Jobdoon.Utilities;
@{
    var user = await userManager.GetUserAsync(User);
    var cancelled = unit.Requests.FindIncluded(r =>
r.Opportunity.CompanyId == user.CompanyId &&
(r.RequestStateId == (int)RequestStatesUtilities.Closed ||
r.RequestStateId == (int)RequestStatesUtilities.EmployeeCancelled ||
r.RequestStateId == (int)RequestStatesUtilities.EmployerCancelled
)).ToList();
}
<div class="container">
    <div class="row">
        <div class="col-9">
            @await Component.InvokeAsync("EmployerRequestsNavbar", new { activeTab = "CancelledTab" })
            <div class="container">
                @await Component.InvokeAsync("EmployerRequestCard", new { requests = cancelled })
            </div>
        </div>
        <div class="col-3"></div>
    </div>
</div>