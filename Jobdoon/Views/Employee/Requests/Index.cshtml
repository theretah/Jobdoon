@inject Microsoft.AspNetCore.Identity.UserManager<Jobdoon.Models.Entities.AppUser> userManager
@inject Jobdoon.DataAccess.UnitOfWork.IUnitOfWork unit
@{
    var user = userManager.GetUserAsync(User).Result;
    var requests = unit.Requests.Find(r => r.EmployeeId == user.Id).ToList();
}
<div class="container-fluid bg-light p-0">
    <div class="container">
        <nav class="navbar navbar-expand-lg">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Employee" asp-action="Search">جستجو</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="#">درخواست های من</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Employee" asp-action="Saved">نشان شده ها</a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-9">
            @await Component.InvokeAsync("EmployeeRequestsNavbar", new { activeTab = "IndexTab" })
            <div class="container">
                @foreach (var r in requests)
                {
                    @await Component.InvokeAsync("RequestCard", new { request = r })
                }
            </div>
        </div>
        <div class="col-3"></div>
    </div>
</div>